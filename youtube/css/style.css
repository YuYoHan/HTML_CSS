*{
    padding: 0;
    margin: 0;
    /*border-box : 테두리를 기준으로 크기를 정합니다.*/
    box-sizing: border-box;
}
body{
    font-family: Roboto;
}
ul, li {
    list-style: none;
}
button, button:focus{
    border: none;
    cursor: pointer;
    outline: none;
}

header{
    display: flex;
    /* justify-content : 가로 축을 기준으로 좌우에 대한 정렬을 관장 합니다.
        요소들 사이에 동일한 간격을 둡니다.*/
    justify-content: space-between;
    padding:  12px;
    background-color: #140a00;
    color:#fff;
}
header .logo{
    font-size: 18px;
}

header .logo i{
    color: #ff0000;
}

header .icons .fa-search{
    margin-right: 12px;
}
button{
    background: none;
}


/*video player*/
.player {
    /*position: sticky 속성을 적용한 박스는 평소에 문서 안에서 
    position: static 상태와 같이 일반적인 흐름에 따르지만 스크롤 위치가 임계점에 이르면 
    position: fixed와 같이 박스를 화면에 고정할 수 있는 속성입니다.*/
    position: sticky;
    top: 0;
    text-align: center;
    background-color: black;
}
.player video{
    width: 100%;
    height: 100%;
    max-width: 1000px;
}

body > .info{
    padding: 12px;
    
}
.metadata{
    margin-right: 20px;
    margin: -15px 0px 5px 15px;
}
.hashtags{
    display: flex;
    font-size: 12px;
    color: blue;
    position: relative;
}
.info .metadata .hashtags li {
    margin-right: 15px;
}

.info .metadata .titleAndButton {
    display: flex;
}

.info .metadata .titleAndButton .title{
    font-size: 14px;
    /*title을 줄여도 2줄로 제한하려고 할 때 사용*/
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
    margin-right: 12px;
}

.info .metadata .titleAndButton .moreBtn{
    height: 100%;
}

.info .views{
    font-size: 12px;
    color: #909090;
}

/* action buttons*/
.info .actions {
    display: flex;
    /*요소들 주위에 동일한 간격을 둡니다.*/
    justify-content: space-around;
    margin: 12px 0;
}

.info .actions button {
    display: flex;
    flex-direction: column;
    font-size: 12px;
}

.info .actions button i {
    /*margin: 0 auto 아이템들이 중간에 온다*/
    margin: 0 auto;
    margin-bottom: 8px;
    font-size: 16px;
}

.info .actions button i.active{
    color: blue;
}

/*channel*/
.info .channel{
    display: flex;
    justify-content: space-between;
    border-top: 1px solid #e0e0e0;
    border-bottom: 1px solid #e0e0e0;
    height: 40px;
    
}

.info .channel .metadata{
    display: flex;
    align-items: center;
    margin-top: 2px;
}
.info .channel .metadata .info{
    display: flex;
    /*flex-direction CSS 속성은 플렉스 컨테이너 내의 아이템을 배치할 때 사용할 주축 및 방향(정방향, 역방향)을 지정합니다.
        row: 플렉스 컨테이너의 주축이 글의 작성 방향과 동일합니다. 주축의 시작점과 끝점이 콘텐츠 방향과 동일합니다.
        row-reverse : row와 동일하게 동작하지만 시작점과 끝점이 반대에 위치합니다.
        column : 플렉스 컨테이너의 주축이 블록 축과 동일합니다. 주축의 시작점과 끝점이, 글 작성 모드의 이전 지점 및 이후 지점과 동일합니다.
        column-reverse : column과 동일하게 동작하지만 시작점과 끝점이 반대에 위치합니다.*/
    flex-direction: column;
}
.info .channel .metadata .info .name{
    font-size: 14px;

}
.info .channel .metadata .info .subscribers{
    font-size: 12px;
    color: #909090;
}
.info .channel .subscribe{
    text-transform: uppercase;
    color: #ff0000;
    font-size: 14px;
}
.info .channel .metadata img{
    width: 36px;
    height: 20px;
    border-radius: 50%;
}

/*upNext*/
.upNext{
    padding: 12px;
}
.upNext .title{
    font-size: 14px;
    color:#909090;
    margin-bottom: 8px;
}

.upNext .item{
    display: flex;
    margin-top: 12px;
}
.upNext .item .img {
    flex: 1 1 35%;
    margin-right:  12px;
}
.upNext .item .img img {
    width: 100%;
}
.upNext .item .info{
    flex: 1 1 60%
}
.upNext .item .moreButton {
    flex: 1 1 5%;
}

.upNext .item .info{
    display: flex;
    flex-direction: column;
}

.upNext .item .info .title {
    font-size: 12px;
}

.upNext .item .info .name,
.upNext .item .info .views {
    font-size: 10px;
    color: #909090;
}

.infoAndUpNext{
    display: flex;
    flex-direction: column;
}

@media screen and(min-width:768px) {
    .infoAndUpNext{
        flex-direction: row;
        margin: 12px 0;
    }
}